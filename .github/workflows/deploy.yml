name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Create a deployment package
      - name: Create deployment package
        run: |
          mkdir -p deployment/backend
          cp -r back-end/* deployment/backend/
          
          mkdir -p deployment/frontend
          cp -r front-end/* deployment/frontend/
          
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_PRIVATE_KEY }}" > ~/.ssh/lightsail.pem
          chmod 600 ~/.ssh/lightsail.pem
          
      - name: Add host key to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          
      - name: Archive deployment
        run: |
          # Compress deployment package
          tar -czf deployment.tar.gz -C deployment .
          
      - name: Upload files to server
        run: |
          # Upload deployment files
          scp -i ~/.ssh/lightsail.pem deployment.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/tmp/
          
          # Extract and setup on server
          ssh -i ~/.ssh/lightsail.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Stop existing Node.js process if running
            cd /opt/bitnami/projects/coinpurse/backend
            kill $(pgrep -f "node server.js") || true
            
            # Kill 3000 and 5001 ports
            kill $(lsof -t -i :3000) || true
            kill $(lsof -t -i :5001) || true
        
            # Clear deployment directories but preserve .env files
            find /opt/bitnami/projects/coinpurse/backend -mindepth 1 -maxdepth 1 -not -name ".env*" -exec rm -rf {} \;
            find /opt/bitnami/projects/coinpurse/frontend -mindepth 1 -maxdepth 1 -not -name ".env*" -exec rm -rf {} \;
            
            # Extract new deployment
            tar -xzf /tmp/deployment.tar.gz -C /opt/bitnami/projects/coinpurse
            
            # Install frontend dependencies
            cd /opt/bitnami/projects/coinpurse/frontend
            npm install --production
            
            # Install backend dependencies
            cd /opt/bitnami/projects/coinpurse/backend
            npm install --production

            # Start pm2
            npm run start
            
            # Clean up
            rm /tmp/deployment.tar.gz
          EOF

      - name: Cleanup
        run: rm -rf ~/.ssh/lightsail.pem 